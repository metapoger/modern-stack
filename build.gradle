// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.32"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.1.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {

    def kotlin = "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.10"

    def COROUTINES_VERSION = "1.3.9"
    def coroutines = [
            "org.jetbrains.kotlinx:kotlinx-coroutines-core:$COROUTINES_VERSION",
            "org.jetbrains.kotlinx:kotlinx-coroutines-android:$COROUTINES_VERSION"
    ]

    def kotlinSerialization = "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"
    def navComp = "androidx.navigation:navigation-fragment-ktx:2.3.0"

    def RETROFIT_VERSION = "2.9.0"
    def network = [
            "com.google.code.gson:gson:2.8.6",
            "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION",
            "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION",
            "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.5.0",
            "com.squareup.okhttp3:logging-interceptor:4.8.1"
    ]

    def FRAGMENT_VERSION = "1.3.0-alpha07"
    def fragment = [
            "androidx.fragment:fragment:$FRAGMENT_VERSION",
            "androidx.fragment:fragment-ktx:$FRAGMENT_VERSION"
    ]

    def HILT_VERSION = "2.28-alpha"
    def hilt = [
            "com.google.dagger:hilt-android:$HILT_VERSION",
            "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02",
    ]
    def hiltKapt=[
            "com.google.dagger:hilt-android-compiler:$HILT_VERSION",
            "androidx.hilt:hilt-compiler:1.0.0-alpha02"
    ]

    def ROOM_VERSION = "2.3.0"
    def room = [
            "androidx.room:room-runtime:$ROOM_VERSION",
            "androidx.room:room-coroutines:$ROOM_VERSION"
    ]

    def roomKapt ="androidx.room:room-compiler:$ROOM_VERSION"

    def GLIDE_VERSION="4.11.0"
    def glide = "com.github.bumptech.glide:glide:$GLIDE_VERSION"
    def glideProcessor = "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
}

task clean(type: Delete) {
    delete rootProject.buildDir
}